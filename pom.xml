<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>io.github.efagerho</groupId>
  <artifactId>loom-grpc</artifactId>
  <version>1.0-SNAPSHOT</version>

  <name>loom-grpc</name>

  <properties>
    <helidon.version>4.0.0-ALPHA6</helidon.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>20</maven.compiler.source>
    <maven.compiler.target>${maven.compiler.source}</maven.compiler.target>
    <maven.compiler.release>${maven.compiler.source}</maven.compiler.release>

    <mainClass>io.github.efagerho.loom.ServerMain</mainClass>
    <version.plugin.compiler>3.8.1</version.plugin.compiler>
    <version.plugin.dependency>3.0.0</version.plugin.dependency>
    <version.plugin.exec>1.6.0</version.plugin.exec>
    <version.plugin.failsafe>3.0.0-M5</version.plugin.failsafe>
    <version.plugin.helidon>2.2.3</version.plugin.helidon>
    <version.plugin.helidon-cli>2.2.3</version.plugin.helidon-cli>
    <version.plugin.jar>3.0.2</version.plugin.jar>
    <version.plugin.os>1.5.0.Final</version.plugin.os>
    <version.plugin.resources>2.7</version.plugin.resources>
    <version.plugin.surefire>3.0.0-M5</version.plugin.surefire>
    <protobuf.version>3.22.3</protobuf.version>
    <grpc.version>1.56.0</grpc.version>
  </properties>

    <dependencyManagement>
      <dependencies>
        <dependency>
          <groupId>io.helidon</groupId>
          <artifactId>helidon-dependencies</artifactId>
          <version>${helidon.version}</version>
          <type>pom</type>
          <scope>import</scope>
        </dependency>
        <dependency>
          <groupId>io.grpc</groupId>
          <artifactId>grpc-bom</artifactId>
          <version>${grpc.version}</version>
          <type>pom</type>
          <scope>import</scope>
        </dependency>
      </dependencies>
    </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>com.google.protobuf</groupId>
      <artifactId>protobuf-java</artifactId>
      <version>${protobuf.version}</version>
    </dependency>
    <dependency>
      <groupId>io.grpc</groupId>
      <artifactId>grpc-netty-shaded</artifactId>
    </dependency>
    <dependency>
      <groupId>io.grpc</groupId>
      <artifactId>grpc-protobuf</artifactId>
    </dependency>
    <dependency>
      <groupId>io.grpc</groupId>
      <artifactId>grpc-stub</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.annotation</groupId>
      <artifactId>javax.annotation-api</artifactId>
      <version>1.3.2</version>
    </dependency>
    <dependency>
      <groupId>io.helidon.nima.webserver</groupId>
      <artifactId>helidon-nima-webserver</artifactId>
    </dependency>
    <dependency>
      <groupId>io.helidon.nima.http2</groupId>
      <artifactId>helidon-nima-http2-webserver</artifactId>
    </dependency>
    <dependency>
      <groupId>io.helidon.nima.grpc</groupId>
      <artifactId>helidon-nima-grpc-webserver</artifactId>
    </dependency>
    <dependency>
      <groupId>io.helidon.config</groupId>
      <artifactId>helidon-config-yaml</artifactId>
    </dependency>
  </dependencies>

  <build>
    <extensions>
      <extension>
        <groupId>kr.motd.maven</groupId>
        <artifactId>os-maven-plugin</artifactId>
        <version>1.6.2</version>
      </extension>
    </extensions>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${version.plugin.compiler}</version>
          <configuration>
            <compilerArgs>
            <compilerArg>--enable-preview</compilerArg>
            </compilerArgs>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${version.plugin.surefire}</version>
          <configuration>
            <useModulePath>false</useModulePath>
            <argLine>--enable-preview</argLine>
            <trimStackTrace>false</trimStackTrace>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>${version.plugin.failsafe}</version>
          <configuration>
            <useModulePath>false</useModulePath>
            <redirectTestOutputToFile>true</redirectTestOutputToFile>
            <argLine>--enable-preview</argLine>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>${version.plugin.dependency}</version>
          <executions>
            <execution>
              <id>copy-libs</id>
              <phase>prepare-package</phase>
              <goals>
                <goal>copy-dependencies</goal>
              </goals>
              <configuration>
                <outputDirectory>${project.build.directory}/libs</outputDirectory>
                <overWriteReleases>false</overWriteReleases>
                <overWriteSnapshots>false</overWriteSnapshots>
                <overWriteIfNewer>true</overWriteIfNewer>
                <overWriteIfNewer>true</overWriteIfNewer>
                <includeScope>runtime</includeScope>
                <excludeScope>test</excludeScope>
                <silent>true</silent>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${version.plugin.resources}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${version.plugin.jar}</version>
          <configuration>
            <archive>
              <manifest>
                <addClasspath>true</addClasspath>
                <classpathPrefix>libs</classpathPrefix>
                <mainClass>${mainClass}</mainClass>
                <useUniqueVersions>false</useUniqueVersions>
              </manifest>
            </archive>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>exec-maven-plugin</artifactId>
          <version>${version.plugin.exec}</version>
          <configuration>
            <executable>java</executable>
            <longClasspath>true</longClasspath>
            <arguments>
              <argument>-classpath</argument>
              <classpath/>
              <argument>${mainClass}</argument>
            </arguments>
          </configuration>
        </plugin>
        <plugin>
          <groupId>io.helidon.build-tools</groupId>
          <artifactId>helidon-maven-plugin</artifactId>
          <version>${version.plugin.helidon}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>${version.plugin.source}</version>
        </plugin>
        <plugin>
          <groupId>org.xolstice.maven.plugins</groupId>
          <artifactId>protobuf-maven-plugin</artifactId>
          <version>0.6.1</version>
          <configuration>
            <!-- artifact to download binary protobuf compiler -->
            <protocArtifact>com.google.protobuf:protoc:${protobuf.version}:exe:${os.detected.classifier}</protocArtifact>
            <!-- make maven using GRPC plugin for compile-custom and
            test-compile-custom goals -->
            <pluginId>grpc-java</pluginId>
            <!-- artifact to download GRPC protobuf compiler plugin -->
            <pluginArtifact>io.grpc:protoc-gen-grpc-java:${grpc.version}:exe:${os.detected.classifier}</pluginArtifact>
            <protoSourceRoot>${basedir}/src/main/proto</protoSourceRoot>
          </configuration>
          <executions>
            <execution>
              <goals>
                <!-- compile .proto files located under main directory -->
                <goal>compile</goal>
                <goal>compile-custom</goal>
                <!-- compile .proto files located under test directory -->
                <goal>test-compile</goal>
                <goal>test-compile-custom</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>3.4.1</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <mainClass>${mainClass}</mainClass>
                </transformer>
              </transformers>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.xolstice.maven.plugins</groupId>
        <artifactId>protobuf-maven-plugin</artifactId>
        <version>0.6.1</version>
        <configuration>
          <!-- artifact to download binary protobuf compiler -->
          <protocArtifact>com.google.protobuf:protoc:${protobuf.version}:exe:${os.detected.classifier}</protocArtifact>
          <!-- make maven using GRPC plugin for compile-custom and
          test-compile-custom goals -->
          <pluginId>grpc-java</pluginId>
          <!-- artifact to download GRPC protobuf compiler plugin -->
          <pluginArtifact>io.grpc:protoc-gen-grpc-java:${grpc.version}:exe:${os.detected.classifier}</pluginArtifact>
          <protoSourceRoot>${basedir}/src/main/proto</protoSourceRoot>
        </configuration>
        <executions>
          <execution>
            <goals>
              <!-- compile .proto files located under main directory -->
              <goal>compile</goal>
              <goal>compile-custom</goal>
              <!-- compile .proto files located under test directory -->
              <goal>test-compile</goal>
              <goal>test-compile-custom</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

      <profiles>
        <profile>
            <id>mac</id>
            <activation>
                <os> 
                <family>mac</family>
                </os>
            </activation>
            <properties>
                <os.detected.classifier>osx-x86_64</os.detected.classifier>
            </properties>
        </profile>
    </profiles>
</project>
